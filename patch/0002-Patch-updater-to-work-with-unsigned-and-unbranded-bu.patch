From e54faf7a93e920e62a652fa01de56faf741b6563 Mon Sep 17 00:00:00 2001
From: Hibiki Tachibana <57486057+Hibbiki@users.noreply.github.com>
Date: Wed, 12 Jun 2024 02:14:41 +0200
Subject: [PATCH 2/4] Patch updater to work with unsigned and unbranded builds

Signed-off-by: Hibiki Tachibana <57486057+Hibbiki@users.noreply.github.com>
---
 build/config/unsafe_buffers_paths.txt         |  1 +
 .../install_static/chromium_install_modes.cc  |  3 +--
 chrome/updater/BUILD.gn                       |  1 +
 chrome/updater/win/installer/installer.cc     | 10 +++++++++
 chrome/updater/win/signing/sign.py            | 21 ++-----------------
 5 files changed, 15 insertions(+), 21 deletions(-)

diff --git a/build/config/unsafe_buffers_paths.txt b/build/config/unsafe_buffers_paths.txt
index fc702d0596dbb..71fb21dc0de57 100644
--- a/build/config/unsafe_buffers_paths.txt
+++ b/build/config/unsafe_buffers_paths.txt
@@ -95,6 +95,7 @@
 # Removing this directory may fail on the bot CI bot:
 # https://luci-milo.appspot.com/ui/p/chrome/builders/official/win-arm64-clang
 -chrome/installer/
+-chrome/updater/
 
 # Please check 'linux-v4l2-codec-rel' bot before removing this opt-out.
 -media/gpu/v4l2/
diff --git a/chrome/install_static/chromium_install_modes.cc b/chrome/install_static/chromium_install_modes.cc
index a888596eda39a..38a177c2c5f8d 100644
--- a/chrome/install_static/chromium_install_modes.cc
+++ b/chrome/install_static/chromium_install_modes.cc
@@ -32,8 +32,7 @@ const InstallConstants kInstallModes[] = {
         .install_suffix =
             L"",  // Empty install_suffix for the primary install mode.
         .logo_suffix = L"",  // No logo suffix for the primary install mode.
-        .app_guid =
-            L"",  // Empty app_guid since no integration with Google Update.
+        .app_guid = L"{7D2B3E1D-D096-4594-9D8F-A6667F12E0AC}",
         .base_app_name = L"Chromium",              // A distinct base_app_name.
         .base_app_id = L"Chromium",                // A distinct base_app_id.
         .browser_prog_id_prefix = L"ChromiumHTM",  // Browser ProgID prefix.
diff --git a/chrome/updater/BUILD.gn b/chrome/updater/BUILD.gn
index 1ac223144b21d..26acff5a3c030 100644
--- a/chrome/updater/BUILD.gn
+++ b/chrome/updater/BUILD.gn
@@ -360,6 +360,7 @@ if (is_win || is_mac || is_linux) {
         "//chrome/installer/util:constants",
         "//chrome/installer/util:metainstaller_utils",
         "//chrome/installer/util:work_item",
+        "//chrome/install_static:install_static_util",
         "//chrome/updater/app/server/win:updater_idl",
         "//chrome/updater/app/server/win:updater_idl_system",
         "//chrome/updater/app/server/win:updater_idl_user",
diff --git a/chrome/updater/win/installer/installer.cc b/chrome/updater/win/installer/installer.cc
index cdd08012986c4..933f0fee09857 100644
--- a/chrome/updater/win/installer/installer.cc
+++ b/chrome/updater/win/installer/installer.cc
@@ -29,6 +29,7 @@
 #include "base/logging.h"
 #include "base/path_service.h"
 #include "base/strings/strcat.h"
+#include "base/strings/stringprintf.h"
 #include "base/strings/sys_string_conversions.h"
 #include "base/synchronization/waitable_event.h"
 #include "base/task/thread_pool.h"
@@ -43,6 +44,7 @@
 #include "base/win/scoped_localalloc.h"
 #include "base/win/windows_version.h"
 #include "chrome/installer/util/lzma_util.h"
+#include "chrome/install_static/install_modes.h"
 #include "chrome/updater/constants.h"
 #include "chrome/updater/tag.h"
 #include "chrome/updater/updater_branding.h"
@@ -67,11 +69,19 @@ namespace {
 // program file image used to create this process. The implementation of this
 // function only handles UTF8 tags.
 std::string ExtractTag() {
+#if BUILDFLAG(GOOGLE_CHROME_BRANDING)
   PathString path;
   return (::GetModuleFileName(nullptr, path.get(), path.capacity()) > 0 &&
           ::GetLastError() == ERROR_SUCCESS)
              ? tagging::BinaryReadTagString(base::FilePath(path.get()))
              : std::string();
+#elif BUILDFLAG(GOOGLE_CHROME_FOR_TESTING_BRANDING)
+  const install_static::InstallConstants& mode = install_static::kInstallModes[install_static::GOOGLE_CHROME_FOR_TESTING_INDEX];
+  return base::StringPrintf("appguid=%s&appname=%s", mode.app_guid, mode.base_app_id);
+#else
+  const install_static::InstallConstants& mode = install_static::kInstallModes[install_static::CHROMIUM_INDEX];
+  return base::StringPrintf("appguid=%s&appname=%s", mode.app_guid, mode.base_app_id);
+#endif
 }
 
 // Shows a splash screen "Initializing...".
diff --git a/chrome/updater/win/signing/sign.py b/chrome/updater/win/signing/sign.py
index fe16f52a91ec0..1fd3fae8c4484 100755
--- a/chrome/updater/win/signing/sign.py
+++ b/chrome/updater/win/signing/sign.py
@@ -98,28 +98,11 @@ class Signer:
         self._sign_flags = sign_flags
 
     def _add_tagging_cert(self, in_file, out_file):
-        """Adds the tagging cert. Returns the path to the tagged file."""
-        subprocess.run(
-            [self._tagging_exe, '--set-tag',
-             '--out=%s' % out_file, in_file],
-            check=True)
+        shutil.copy(in_file, out_file)
         return out_file
 
     def _sign_item(self, in_file):
-        """Sign an executable in-place."""
-        # Retries may be required: lore states the timestamp server is flaky.
-        for flags in self._sign_flags:
-            command = [self._signtool_exe, 'sign']
-            command += flags
-            if self._certificate_file_path:
-                command += ['/f', self._certificate_file_path]
-            if self._certificate_password:
-                command += ['/p', self._certificate_password]
-            if self._identity:
-                command += ['/s', 'My', '/n', self._identity]
-
-            command += [in_file]
-            subprocess.run(command, check=True)
+        return
 
     def _generate_target_manifest(self, appid, installer_path, manifest_path,
                                   manifest_dict_replacements):
-- 
2.47.0.windows.2

